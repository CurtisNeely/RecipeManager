@model RecipeManager.ViewModels.AnalyticsViewModel

<h1>Admin Analytics</h1>

<table class="table table-bordered text-center">
    <tr>
        <th>Recipes</th>
        <th>Private Recipes</th>
        <th>Public Recipes</th>
        <th>Users</th>
    </tr>
    <tr>
        <td>@Model.recipeCount</td>
        <td>@Model.privateRecipeCount</td>
        <td>@Model.publicRecipeCount</td>
        <td>@Model.userCount</td>
    </tr>
</table>
<br />

<h3>Recipes over Time</h3>
<form asp-action="Index">
    <div class="row">
        <div class="col">
            <label class="col-form-label">Start Date</label>
            <input type="date" class="form-control" name="StartDate">
        </div>
        <div class="col">
            <label class="col-form-label">End Date</label>
            <input type="date" class="form-control" name="EndDate">
        </div>
    </div>
    <input type="submit" value="Make the Graph!" class="btn btn-primary mt-2" />
</form>

<h4 class="text-center mt-3">Recipe Growth Between @Model.startDate & @Model.endDate</h4>
<div class="row">
    <div class="col-2">
    </div>
    <div class="col-8">
        <canvas id="myChart"></canvas>
    </div>
    <div class="col-2">
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script>
    console.log()
    var ctx = document.getElementById('myChart').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: @Html.Raw(Model.labels),
            datasets: [{
                label: 'Recipes',
                backgroundColor: 'rgb( 91, 242, 109 )',
                borderColor: 'rgb( 91, 242, 109 )',
                data: @Html.Raw(Model.data)
            }]
        },

        // Configuration options go here
        options: {}
    });
</script>
